/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Almacenamiento.BLPersona;
import Almacenamiento.Blcontagio;
import Clases.Contagio;
import Clases.ListPersonas;
import Clases.Persona;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;

/**
 *
 * @author snaker
 */
public class JFcontagio extends javax.swing.JFrame {

    
    Almacenamiento.BLPersona manejaper;
/**
     * Creates new form JFcontagio
     */
        Almacenamiento.Blcontagio manejacontg;
    Clases.ListPersonas list_model = new ListPersonas();


    int idper = 0;

    public JFcontagio() throws SQLException {
        this.manejacontg = new Blcontagio();
        this.manejaper = new BLPersona();
        initComponents();
        jp.setVisible(true);
        listtxts();

        mostrarbtt(false);
        activedit(false);
        try {
            RecuperaDatos();
            Cargarlistas();
        } catch (IOException | ClassNotFoundException | SQLException ex) {
            System.out.println(ex.getMessage());
        }

        txtap.setEditable(false);
        listper.setModel(list_model);
        txtidp.setEnabled(false);
        txtidp.setText("Id ");
        txtidc.setEnabled(false);
        txtidc.setVisible(false);
        txtidp.setVisible(false);
        this.bttnuevo.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        colorUtil1 = new org.jdesktop.swingx.color.ColorUtil();
        colorHighlighter1 = new org.jdesktop.swingx.decorator.ColorHighlighter();
        colorUtil2 = new org.jdesktop.swingx.color.ColorUtil();
        fondo = new javax.swing.JLabel();
        jp = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbfec = new javax.swing.JLabel();
        lbfin = new javax.swing.JLabel();
        txtbuscar = new javax.swing.JTextField();
        btteditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablap = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        listper = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtap = new javax.swing.JTextArea();
        bttagregar = new javax.swing.JButton();
        bttbuscar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtidp = new javax.swing.JTextField();
        txtidc = new javax.swing.JTextField();
        datefin = new com.toedter.calendar.JDateChooser();
        bttlcancelar = new javax.swing.JButton();
        bttnuevo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lbfechas = new javax.swing.JLabel();
        btteliminar = new javax.swing.JButton();
        bttcanbiarfech = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        labdatos = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labcord = new javax.swing.JLabel();
        txtlong = new javax.swing.JTextField();
        txtlat = new javax.swing.JTextField();
        bttmap = new javax.swing.JLabel();
        lablat = new javax.swing.JLabel();
        lablong = new javax.swing.JLabel();
        lbcdes = new javax.swing.JLabel();
        bttbcoord = new javax.swing.JLabel();
        datec = new com.toedter.calendar.JDateChooser();
        bttactualizarlst = new javax.swing.JLabel();
        fbackgraund = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        jMenu2.setText("File");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        fondo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/5c37cb15ab068bcc2ec1a3eb19313fc9-coronavirus-green-background-design.jpg"))); // NOI18N
        fondo.setToolTipText("");
        fondo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        fondo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fondo.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        fondo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fondo.setIconTextGap(110);
        fondo.setInheritsPopupMenu(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jp.setBackground(new java.awt.Color(102, 102, 102));
        jp.setAutoscrolls(true);
        jp.setNextFocusableComponent(this);
        jp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(" Cedula");
        jp.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 51, 20));

        lbfec.setText("Fecha de Contagio");
        jp.add(lbfec, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 70, 140, 20));

        lbfin.setText("Fecha para fin de Aislamieto");
        jp.add(lbfin, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 70, 140, 20));

        txtbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuscarActionPerformed(evt);
            }
        });
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbuscarKeyPressed(evt);
            }
        });
        jp.add(txtbuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 140, -1));

        btteditar.setFont(new java.awt.Font("Lucida Sans", 1, 11)); // NOI18N
        btteditar.setForeground(new java.awt.Color(0, 102, 102));
        btteditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_edit_property_15px.png"))); // NOI18N
        btteditar.setText("Editar-Eliminar ");
        btteditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btteditarActionPerformed(evt);
            }
        });
        jp.add(btteditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 150, -1));

        tablap.setAutoCreateRowSorter(true);
        tablap.setBackground(new java.awt.Color(51, 255, 204));
        tablap.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        tablap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablapMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablap);

        jp.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, 640, 230));

        listper.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listper.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        listper.setFocusable(false);
        listper.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listperMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listper);

        jp.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 220, 240));

        txtap.setBackground(new java.awt.Color(51, 255, 204));
        txtap.setColumns(20);
        txtap.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        txtap.setRows(5);
        txtap.setToolTipText("");
        txtap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtap.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane4.setViewportView(txtap);

        jp.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 370, 190));

        bttagregar.setFont(new java.awt.Font("Lucida Sans", 1, 11)); // NOI18N
        bttagregar.setForeground(new java.awt.Color(0, 102, 102));
        bttagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_add_list_15px.png"))); // NOI18N
        bttagregar.setText("Registrar Contagio");
        bttagregar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bttagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttagregarActionPerformed(evt);
            }
        });
        jp.add(bttagregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 340, -1, -1));

        bttbuscar.setBackground(new java.awt.Color(0, 153, 153));
        bttbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_search_15px_1.png"))); // NOI18N
        bttbuscar.setBorder(null);
        bttbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttbuscarActionPerformed(evt);
            }
        });
        jp.add(bttbuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 50, 20));

        jLabel5.setText("Lista de Personas");
        jp.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 190, 30));

        jLabel6.setText("CONATGIOS");
        jp.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, -1, -1));

        txtidp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidpActionPerformed(evt);
            }
        });
        jp.add(txtidp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, -1));

        txtidc.setText("Id Contagio");
        txtidc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidcActionPerformed(evt);
            }
        });
        jp.add(txtidc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 90, -1));

        datefin.setBackground(new java.awt.Color(0, 153, 255));
        datefin.setDateFormatString("yyyy-M-dd");
        datefin.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        datefin.setFont(new java.awt.Font("Malgun Gothic", 1, 11)); // NOI18N
        jp.add(datefin, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 100, 140, -1));

        bttlcancelar.setFont(new java.awt.Font("Lucida Sans", 1, 11)); // NOI18N
        bttlcancelar.setForeground(new java.awt.Color(0, 102, 102));
        bttlcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_erase_15px.png"))); // NOI18N
        bttlcancelar.setText("Limpiar-Cancelar");
        bttlcancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bttlcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttlcancelarActionPerformed(evt);
            }
        });
        jp.add(bttlcancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 370, 130, 20));

        bttnuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_add_15px.png"))); // NOI18N
        bttnuevo.setText("AGREGAR");
        bttnuevo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bttnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnuevoActionPerformed(evt);
            }
        });
        jp.add(bttnuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 130, 30));

        jLabel8.setBackground(new java.awt.Color(0, 204, 204));
        jLabel8.setFont(new java.awt.Font("Perpetua Titling MT", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Registro de Contagios");
        jLabel8.setOpaque(true);
        jp.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 40));

        lbfechas.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        lbfechas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbfechas.setText("Seleciona Fechas ");
        jp.add(lbfechas, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 40, 130, 30));

        btteliminar.setFont(new java.awt.Font("Lucida Sans", 1, 11)); // NOI18N
        btteliminar.setForeground(new java.awt.Color(0, 102, 102));
        btteliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit-delete-icon.png"))); // NOI18N
        btteliminar.setText("Eliminar ");
        btteliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btteliminarActionPerformed(evt);
            }
        });
        jp.add(btteliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, 110, -1));

        bttcanbiarfech.setFont(new java.awt.Font("Lucida Sans", 1, 11)); // NOI18N
        bttcanbiarfech.setForeground(new java.awt.Color(0, 102, 102));
        bttcanbiarfech.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_update_15px.png"))); // NOI18N
        bttcanbiarfech.setText("Actualizar Fechas y Cordenadas");
        bttcanbiarfech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttcanbiarfechActionPerformed(evt);
            }
        });
        jp.add(bttcanbiarfech, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 380, -1, 20));

        jLabel9.setText("Seleciona");
        jp.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 110, 10));

        labdatos.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        labdatos.setText("Datos");
        labdatos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labdatos.setInheritsPopupMenu(false);
        jp.add(labdatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 300, 30));

        jLabel10.setBackground(new java.awt.Color(102, 0, 51));
        jLabel10.setText("Tabla Contagios");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jp.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 100, -1));

        labcord.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 14)); // NOI18N
        labcord.setText("Cordenadas de Ubicación");
        jp.add(labcord, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 140, 190, 30));

        txtlong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtlongKeyPressed(evt);
            }
        });
        jp.add(txtlong, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 300, 170, 30));

        txtlat.setToolTipText("");
        txtlat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtlatMouseClicked(evt);
            }
        });
        txtlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlatActionPerformed(evt);
            }
        });
        txtlat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtlatKeyPressed(evt);
            }
        });
        jp.add(txtlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 300, 160, 30));

        bttmap.setBackground(new java.awt.Color(204, 204, 204));
        bttmap.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        bttmap.setForeground(new java.awt.Color(51, 51, 51));
        bttmap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_google_maps_old_25px_1.png"))); // NOI18N
        bttmap.setText("Mostrar Mapa");
        bttmap.setToolTipText("");
        bttmap.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        bttmap.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bttmap.setIconTextGap(5);
        bttmap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttmapMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bttmapMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bttmapMouseExited(evt);
            }
        });
        jp.add(bttmap, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 500, 130, 30));

        lablat.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lablat.setText("LATITUD");
        jp.add(lablat, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 280, 50, 20));

        lablong.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lablong.setText("LONGITUD");
        jp.add(lablong, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 280, -1, -1));

        lbcdes.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lbcdes.setText( "<html><p>Formato de Cordenadas:"
            + "-1.4020887089605631, -78.47718401235083"

            + "</p></html>"
        );
        jp.add(lbcdes, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 190, 210, 80));

        bttbcoord.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bttbcoord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_location_25px.png"))); // NOI18N
        bttbcoord.setText("Buscar Cordenadas");
        bttbcoord.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        bttbcoord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttbcoordMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bttbcoordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bttbcoordMouseExited(evt);
            }
        });
        jp.add(bttbcoord, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 210, 160, 40));

        datec.setDateFormatString("yyyy-M-dd");
        datec.setFont(new java.awt.Font("Malgun Gothic", 1, 11)); // NOI18N
        jp.add(datec, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 100, 140, -1));

        bttactualizarlst.setBackground(new java.awt.Color(153, 0, 0));
        bttactualizarlst.setText("Actualizar");
        bttactualizarlst.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bttactualizarlst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttactualizarlstMouseClicked(evt);
            }
        });
        jp.add(bttactualizarlst, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 70, -1));

        fbackgraund.setFont(new java.awt.Font("Lucida Sans", 1, 11)); // NOI18N
        fbackgraund.setForeground(new java.awt.Color(0, 102, 102));
        fbackgraund.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/-coronavirus-green-background-design.jpg"))); // NOI18N
        fbackgraund.setText("jLabel3");
        jp.add(fbackgraund, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -20, 1080, 700));

        getContentPane().add(jp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuscarActionPerformed
        // TODO add your handling code here:
            

    }//GEN-LAST:event_txtbuscarActionPerformed

    private void tablapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablapMouseClicked
        // TODO add your handling code here:
        int row = (int) tablap.getSelectedRow();
        int column = (int) tablap.getSelectedColumn();
        //Obtiene el valor de la seleccion
        String strValor = (String) tablap.getModel().getValueAt(row, column);
        //Muestra en la eqiqueta
        String Id = (String) tablap.getModel().getValueAt(row, 0);
        txtidc.setText(Id);
        String idp = (String) tablap.getModel().getValueAt(row, 1);
        txtidp.setText(idp);
        //Fechas

        String fechac = (String) tablap.getModel().getValueAt(row, 2);

        Date date = null;
        try {
            date = new SimpleDateFormat(datec.getDateFormatString()).parse(fechac);
        } catch (ParseException ex) {
            Logger.getLogger(JFcontagio.class.getName()).log(Level.SEVERE, null, ex);
        }
        datec.setDate(date);

        String fechafin = (String) tablap.getModel().getValueAt(row, 3);

        Date date2 = null;
        try {
            date2 = new SimpleDateFormat(datec.getDateFormatString()).parse(fechafin);
        } catch (ParseException ex) {
            Logger.getLogger(JFcontagio.class.getName()).log(Level.SEVERE, null, ex);
        }
        datefin.setDate(date2);

        String lat = (String) tablap.getModel().getValueAt(row, 4);
        txtlat.setText(lat);
        String lon = (String) tablap.getModel().getValueAt(row, 5);
        txtlong.setText(lon);
        //mostrarbtt(false);
        bttnuevo.setVisible(false);
        btteditar.setVisible(true);
        bttagregar.enableInputMethods(false);
        labdatos.setText("DATOS->Selecionado Cotagio");
        activedit(true);
        this.bttagregar.setVisible(false);
        //txtap.setText("Fecha Contagio:\n"+"Fin de Aislamiento");
        try {
            getdatoscont(Integer.parseInt(idp), Integer.parseInt(Id));
            // RecuperaDatos1(intidperson);
        } catch (SQLException ex) {
            Logger.getLogger(JFcontagio.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*  String direcc= (String) tablap.getModel().getValueAt(row, 4);
        txtdirecc.setText(direcc);
        String edad = (String) tablap.getModel().getValueAt(row, 5);
        txtedad.setText(edad);
        String sexo = (String) tablap.getModel().getValueAt(row, 6);
        sexocmbx.setSelectedItem(sexo);
        bttguardar.setVisible(false);
        boolean bo=true;
        bloqueartxts(bo);
        bttactualizar.setVisible(false);
        btteliminar.setVisible(false);
        btteditar.setVisible(true);
        
         */

    }//GEN-LAST:event_tablapMouseClicked

    private void listperMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listperMouseClicked
        // TODO add your handling code here:
        txtap.setColumns(6);
        int selection = listper.getSelectedIndex();

        RecuperaDatosPer(selection);

        mostrarbtt(false);
        activedit(false);
        bttnuevo.setVisible(true);
        labdatos.setText("DATOS->Selecionado Persona");

        //txtap.setText(list_model.getPersona());
    }//GEN-LAST:event_listperMouseClicked

    private void bttbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttbuscarActionPerformed
        // TODO add your handling code here:
        try {

            Buscar();

        } catch (SQLException ex) {
            Logger.getLogger(JFpersona.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bttbuscarActionPerformed

    private void bttagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttagregarActionPerformed

        if (this.txtidp.getText().equals("")
                || // .getUiComponent().getToolTipText().isEmpty(false)||
                // .getUiComponent().getToolTipText().equals(null)
                datec.getDate() == null || datefin.getDate() == null
                || txtlat.getText().equals("") || txtlong.getText().equals("")) {

            javax.swing.JOptionPane.showMessageDialog(this, "No has seleccionado todos \n "
                    + "los datos necesarios");
            // || txtcel.getText().equals("")||) {

        } else {

            try {
                if (Guardar() == true) {
                    JOptionPane.showMessageDialog(this, "Datos Almacenados con exito");
                    Limpiar();

                    try {
                        RecuperaDatos();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(JFpersona.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(JFpersona.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(JFpersona.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Error al Almacenar los datos");
                }
            } catch (SQLException ex) {
                Logger.getLogger(JFcontagio.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_bttagregarActionPerformed

    private void bttlcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttlcancelarActionPerformed

        // TODO add your handling code here:
        Limpiar();
        mostrarbtt(false);
    }//GEN-LAST:event_bttlcancelarActionPerformed

    private void btteditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btteditarActionPerformed
        // TODO add your handling code here:
        this.datec.setVisible(true);
        this.datefin.setVisible(true);
        this.lbfechas.setVisible(true);
        this.lbfec.setVisible(true);
        this.lbfin.setVisible(true);
        btteliminar.setVisible(true);
        bttcanbiarfech.setVisible(true);

        this.txtlat.setEnabled(true);
        this.txtlong.setEnabled(true);
    }//GEN-LAST:event_btteditarActionPerformed

    private void bttnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnuevoActionPerformed
        // TODO add your handling code here:
        activedit(true);
        mostrarbtt(true);


    }//GEN-LAST:event_bttnuevoActionPerformed

    private void btteliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btteliminarActionPerformed

        int op = JOptionPane.showConfirmDialog(null, "Seguro que deseas eliminar?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (op == JOptionPane.YES_OPTION) {

            try {
                Eliminar();
                Limpiar();
                RecuperaDatos();
            } catch (IOException | ClassNotFoundException | SQLException ex) {
                System.out.println(ex.getMessage());
            }

        } else if (op == JOptionPane.YES_NO_CANCEL_OPTION) {
            btteliminar.enableInputMethods(false);

        }

    }//GEN-LAST:event_btteliminarActionPerformed

    private void bttcanbiarfechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttcanbiarfechActionPerformed
        if (this.txtidp.getText().equals("")
                || // .getUiComponent().getToolTipText().isEmpty(false)||
                // .getUiComponent().getToolTipText().equals(null)
                datec.getDate() == null || datefin.getDate() == null & txtlat.getText() == null
                & txtlong.getText() == null) {

            javax.swing.JOptionPane.showMessageDialog(this, "No has ingresado \n "
                    + "fechas ");
        } else {
            try {
                Actualizar();
                JOptionPane.showMessageDialog(rootPane, "Datos Actualizado corentamente  ;)");
                Limpiar();
                RecuperaDatos();

            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_bttcanbiarfechActionPerformed

    private void txtidcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidcActionPerformed

    private void bttmapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttmapMouseClicked
        // TODO add your handling code here:

        String linkmap = "https://mapcovi.rf.gd/";

        Desktop enlace = Desktop.getDesktop();

        try {
            enlace.browse(new URI(linkmap));
        } catch (IOException | URISyntaxException e) {

            e.getMessage();
        }
    }//GEN-LAST:event_bttmapMouseClicked

    private void bttmapMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttmapMouseEntered
        // TODO add your handling code here:
        Border border = BorderFactory.createLineBorder(Color.red);
        this.bttmap.setBorder(border);

    }//GEN-LAST:event_bttmapMouseEntered

    private void bttmapMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttmapMouseExited
        // TODO add your handling code here:
        bttmap.setBorder(null);
    }//GEN-LAST:event_bttmapMouseExited

    private void txtlatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtlatMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlatMouseClicked

    private void bttbcoordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttbcoordMouseEntered
        // TODO add your handling code here:
        Border border = BorderFactory.createLineBorder(Color.red);
        this.bttbcoord.setBorder(border);
    }//GEN-LAST:event_bttbcoordMouseEntered

    private void bttbcoordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttbcoordMouseExited
        // TODO add your handling code here:
        bttbcoord.setBorder(null);

    }//GEN-LAST:event_bttbcoordMouseExited

    private void bttbcoordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttbcoordMouseClicked
        // TODO add your handling code here:
        String linkmap = "https://www.google.com/maps/@-2.4581538,-80.1165253,5z";

        Desktop enlace = Desktop.getDesktop();

        try {
            enlace.browse(new URI(linkmap));
        } catch (IOException | URISyntaxException e) {

            e.getMessage();
        }

    }//GEN-LAST:event_bttbcoordMouseClicked

    private void txtlatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlatKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)
                || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE || evt.getKeyChar() == '.'
                || evt.getKeyChar() == '-')) {
//  evt.getKeyChar() == '.' does accept point when jtextfield accepts decimal number
            evt.consume();
            getToolkit().beep();

            txtlat.setEditable(false);
            JOptionPane.showMessageDialog(null, "Estas ingresando un caracter no valido");
        } else {
            txtlat.setEditable(true);

        }
    }//GEN-LAST:event_txtlatKeyPressed

    private void txtlongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlongKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)
                || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE || evt.getKeyChar() == '.')) {
//  evt.getKeyChar() == '.' does accept point when jtextfield accepts decimal number
            evt.consume();
            getToolkit().beep();
            txtlong.setEditable(false);
        } else {
            txtlong.setEditable(true);

        }


    }//GEN-LAST:event_txtlongKeyPressed

    private void txtbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)
                || (c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE))) {
//  evt.getKeyChar() == '.' does accept point when jtextfield accepts decimal number
            evt.consume();

            txtlat.setEditable(true);
        } else {
            txtlat.setEditable(false);

        }

    }//GEN-LAST:event_txtbuscarKeyPressed

    private void txtlatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlatActionPerformed

    private void txtidpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidpActionPerformed

    private void bttactualizarlstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttactualizarlstMouseClicked
         list_model.deleteall();
        try { 
            
            
        
            
            Cargarlistas();
        } catch (SQLException ex) {
            Logger.getLogger(JFcontagio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JFcontagio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(JFcontagio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bttactualizarlstMouseClicked

  
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bttactualizarlst;
    private javax.swing.JButton bttagregar;
    private javax.swing.JLabel bttbcoord;
    private javax.swing.JButton bttbuscar;
    private javax.swing.JButton bttcanbiarfech;
    private javax.swing.JButton btteditar;
    private javax.swing.JButton btteliminar;
    private javax.swing.JButton bttlcancelar;
    private javax.swing.JLabel bttmap;
    private javax.swing.JButton bttnuevo;
    private org.jdesktop.swingx.decorator.ColorHighlighter colorHighlighter1;
    private org.jdesktop.swingx.color.ColorUtil colorUtil1;
    private org.jdesktop.swingx.color.ColorUtil colorUtil2;
    private com.toedter.calendar.JDateChooser datec;
    private com.toedter.calendar.JDateChooser datefin;
    private javax.swing.JLabel fbackgraund;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel jp;
    private javax.swing.JLabel labcord;
    private javax.swing.JLabel labdatos;
    private javax.swing.JLabel lablat;
    private javax.swing.JLabel lablong;
    private javax.swing.JLabel lbcdes;
    private javax.swing.JLabel lbfec;
    private javax.swing.JLabel lbfechas;
    private javax.swing.JLabel lbfin;
    private javax.swing.JList<String> listper;
    private javax.swing.JTable tablap;
    private javax.swing.JTextArea txtap;
    private javax.swing.JTextField txtbuscar;
    private javax.swing.JTextField txtidc;
    private javax.swing.JTextField txtidp;
    private javax.swing.JTextField txtlat;
    private javax.swing.JTextField txtlong;
    // End of variables declaration//GEN-END:variables

    public void RecuperaDatos() throws ClassNotFoundException, IOException, SQLException {
        //ArrayList<Institucion> lstInst = objArcInstitucion.RecuperaObjetosInstLST();  
        // ArrayList<Ubicacion> lstubi = ubi.BuscarTodos();
        ArrayList<Contagio> lstper = manejacontg.BuscarTodos();

        /*Es necesario crear un objeto con las columnas que se mostrarán en la tabla*/
        Object columnas[] = {"Id", "IdPersona", "Fecha de Contagio", "Fecha Fin Contagio", "Latitud", "Longitud"};
        /*Es necesario añadir las columnas al modelo de la Tabla*/
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);
        /*Añadidas las columnas y el modelo se setea en la Tabla*/

        DateFormat dateFormat = new SimpleDateFormat("yyyy-M-dd");

        tablap.setModel(modelo);
        for (Contagio per : lstper) {
            String id = String.valueOf(per.getIdcont());
            String idper = String.valueOf(per.getPersona());
            Date fechac = per.getFechacontagio();
            Date fechafin = per.getFincontagio();
            String lat = String.valueOf(per.getLat());
            String lon = String.valueOf(per.getLon());

            //String telefono = per.getTelefono();
            //String direccion = per.getDireccion();
            //  String edad = String.valueOf(per.getEdad());
            // String sexo = String.valueOf(per.getSexo());
            //Por cada registro se lo añade a una estructra tipo Arreglo para incluirlo en la Tabla
            String date = dateFormat.format(fechac);
            String date2 = dateFormat.format(fechafin);

            String modeloTemp[] = {id, idper, date, date2, lat, lon};
            //Se añade la estructura al modelo de la Tabla

            modelo.addRow(modeloTemp);

        };
        this.pack();

    }

    /*  public boolean Actualizar(){
       DateFormat datef= new SimpleDateFormat("yyyy-MM-dd");  
        Date date1=datec.getDate();
        Date date2f =datefin.getDate();
       
           
      datef.format(date1);
        datef.format(date2f);
    Contagio contg = new Contagio(-1, Integer.parseInt(txtidp.getText()),
            date1,date2f);
         
        boolean retorno = manejacontg.ModificarContagio(contg);
        return retorno;
    } */
    public void Cargarlistas() throws SQLException, ClassNotFoundException, IOException {
        
       //RecuperaDatos();
          
        String idpe = null;
         int row = (int) tablap.getEditingRow();
        ArrayList<Persona> lstper = manejaper.BuscarTodos();
      // Persona per = new Persona();
      ArrayList<Contagio> lstc = manejacontg.BuscarTodos();
        
         
       
        //txtidp.setText(idp);
       

      
        lstper.forEach((inst) -> {
            // int id = inst.getIdPersona();
            // String id = String.valueOf(inst.getIntPersona());
            int cedu = Integer.valueOf(inst.getDNI());
            String nombres = inst.getNombres();
            String cel = inst.getTelefono();
            String direccion = inst.getDireccion();
            int edad = inst.getEdad();
            String sexo = String.valueOf(inst.getSexo());
            Persona pe = new Persona(cedu, nombres, cel, direccion,
                    edad, sexo);
           // list_model.addPersona(pe);
            // labpersona.setText(id+"\n"+cedu+"\n"+nombres+"     "+tipo);
            //Se añade los elementos al modelo de la lista
           list_model.addPersona(pe);
         
        lstc.forEach((c) ->{
            int idcp = Integer.valueOf(c.getPersona());
            
           if (cedu == idcp) {
           list_model.delete(pe);
              //  
             }
         
         
             
        
         
        });
        
         
            
   

       
        
       
            
                 });
            this.pack();
        }

           
            
        
    
    

    

   
    public void Limpiar() {
        this.txtbuscar.setText(null);
        this.txtap.setText(null);
        this.datec.setDate(null);
        this.datefin.setDate(null);
        this.txtidp.setText(null);
        txtlat.setText(null);
        txtlong.setText(null);

    }

    public void RecuperaDatosPer(int index) {

       
       
/*public void lordTable(JTable jtable, JTextField txtItemID, JTextField txtName, JTextField txtQty, JTextField txtUp) {
    String s = "";
    boolean exists = false;
    for (int i = 0; i < jtable.getRowCount(); i++) {
        s = jtable.getValueAt(i, 1).toString().trim();

        if (txtItemID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter Invoice Details First");
        } else {
            if (txtItemID.getText().equals(s)) {
                exists = true;
                break;
            }
        }
    }
    if (!exists) {
        DefaultTableModel dd = (DefaultTableModel) jtable.getModel();
        Vector v = new Vector();
        v.add(txtItemID.getText());
        v.add(txtName.getText());
        v.add(txtQty.getText());
        v.add(txtUp.getText());
        Double val = (Double.parseDouble(txtUp.getText())) * (Double.parseDouble(txtQty.getText()));
        v.add(val);
        dd.addRow(v);
    } else {
        JOptionPane.showMessageDialog(null, "data already exist.");
    }
}*/
       
      
       
        
        index = listper.getSelectedIndex();

        if (index != -1) {

            Persona per = list_model.getPersona(index);

            // String id = String.valueOf(per.getIntPersona());
            txtidp.setText(String.valueOf(per.getDNI()));
            txtap.setText(per.toString());
            
            
        }
        
        
        
        
        this.pack();
    
    }

    public void getdatoscont(int idper, int idcont) throws SQLException {
        ArrayList<Persona> lstp = manejaper.Buscar1(idper);
        ArrayList<Contagio> lstc = manejacontg.BuscarContagio(idcont);

        String union = null;
        //String id = String.valueOf(per.getIntPersona());
        for (Persona inst : lstp) {
            int id = inst.getIdPersona();
            // String id = String.valueOf(inst.getIntPersona());
            int cedu = inst.getDNI();
            String nombres = inst.getNombres();
            String cel = inst.getTelefono();
            String direccion = inst.getDireccion();
            int edad = inst.getEdad();
            String sexo = String.valueOf(inst.getSexo());
            Persona pe = new Persona(cedu, nombres, cel, direccion,
                    edad, sexo);
            txtidp.setText(String.valueOf(pe.getDNI()));
            for (Contagio con : lstc) {
                int idc = con.getIdcont();
                int idp = con.getPersona();
                Date d1 = con.getFechacontagio();
                Date d2 = con.getFincontagio();

                java.sql.Date sql1 = new java.sql.Date(d1.getTime());
                java.sql.Date sql2 = new java.sql.Date(d2.getTime());

                Contagio cont = new Contagio(idc, sql1, sql2);
                union = cont.toString() + "\n \n" + pe.toString();
            }

            txtap.setText(union);
        }

    }

    public void cargartabla() {
        Object columnas[] = {"Id", "IdPersona", "Fecha de Contagio", "Fin de Contagio"};
        /*Es necesario añadir las columnas al modelo de la Tabla*/
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);
        /*Añadidas las columnas y el modelo se setea en la Tabla*/
        tablap.setModel(modelo);

    }

    public boolean Guardar() throws SQLException {

        Date date1 = this.datec.getDate();
        Date date2 = this.datefin.getDate();
        java.sql.Date sql = new java.sql.Date(date1.getTime());
        java.sql.Date sql2 = new java.sql.Date(date2.getTime());

        double lat = Double.parseDouble(txtlat.getText());

        double logn = Double.parseDouble(txtlong.getText());
        int idp = Integer.parseInt(txtidp.getText());

        Contagio contg = new Contagio(-1, idp, sql, sql2,
                lat, logn);
        //Contagio contg = new Contagio( sqldate)   ;   
        //date1,date2f );

        boolean retorno = manejacontg.Registrarcontagio(contg, Integer.parseInt(txtidp.getText()));

        return retorno;
    }

    void mostrar() {
        jp.setVisible(true);
        jp.getAccessibleContext();

    }

    public boolean Actualizar() throws ParseException, SQLException {

        Date date1 = this.datec.getDate();
        Date date2 = this.datefin.getDate();
        java.sql.Date sql = new java.sql.Date(date1.getTime());
        java.sql.Date sql2 = new java.sql.Date(date2.getTime());

        double lat = Double.parseDouble(txtlat.getText());

        double logn = Double.parseDouble(txtlong.getText());
        int idp = Integer.parseInt(txtidp.getText());

        Contagio contg = new Contagio(-1, idp, sql, sql2,
                lat, logn);
        //Contagio contg = new Contagio( sqldate)   ;   
        //date1,date2f );

        boolean retorno = manejacontg.ModificarContagio(contg);

        return retorno;
    }

    public void Eliminar() throws SQLException {
        boolean blnresultado = manejacontg.EliminarCOntagio(Integer.valueOf(txtidc.getText()));
        if (blnresultado == true) {
            JOptionPane.showMessageDialog(rootPane, "Registro eliminado con exito");

        } else {
            JOptionPane.showMessageDialog(rootPane, "No se encontró registro a eliminar");
        }
    }

    public void Buscar() throws SQLException {
        ArrayList<Persona> lstper = manejaper.Buscar2(txtbuscar.getText());

        //txtID.setText(String.valueOf(ins.getId()));
        if (lstper.size() > 0) {
            for (Persona per : lstper) {

                txtap.setText(per.toString());
                txtidp.setText(String.valueOf(per.getDNI()));

            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro no encontrado");
            // Limpiar();
        }
    }

    public boolean mostrarbtt(boolean bo) { //mostra y ocultar botones
        if (bo == false) {
            this.bttagregar.setVisible(false);
            this.bttcanbiarfech.setVisible(false);

            this.btteditar.setVisible(false);
            this.btteliminar.setVisible(false);
            this.txtlat.setEnabled(false);
            this.txtlong.setEnabled(false);

        }
        if (bo == true) {
            this.bttagregar.setVisible(true);

            this.txtlat.setEnabled(true);
            this.txtlong.setEnabled(true);

        }

        return bo;

    }

    public boolean activedit(boolean bo) {

        if (bo == false) {

            this.lbfechas.setVisible(false);
            this.datec.setVisible(false);
            this.datefin.setVisible(false);

            this.lbfec.setVisible(false);
            this.lbfin.setVisible(false);

            this.labcord.setVisible(false);
            this.txtlat.setVisible(false);
            this.txtlong.setVisible(false);
            this.bttbcoord.setVisible(false);
            this.lablat.setVisible(false);
            this.lablong.setVisible(false);
            this.lbcdes.setVisible(false);
        }
        if (bo == true) {

            this.lbfechas.setVisible(true);

            this.datec.setVisible(true);
            this.datefin.setVisible(true);
            this.lbfec.setVisible(true);
            this.lbfin.setVisible(true);

            this.labcord.setVisible(true);
            this.txtlat.setVisible(true);
            this.txtlong.setVisible(true);

            this.labcord.setVisible(true);
            this.txtlat.setVisible(true);
            this.txtlong.setVisible(true);
            this.bttbcoord.setVisible(true);
            this.lablat.setVisible(true);
            this.lablong.setVisible(true);
            this.lbcdes.setVisible(true);
        }

        return bo;

    }

    public void listtxts() {
        Txtmenu(txtbuscar);
        Txtmenu(txtlat);
        Txtmenu(txtlong);

    }

    public void Txtmenu(JTextField txt) {

        JPopupMenu menu = new JPopupMenu();
        Action cut = new DefaultEditorKit.CutAction();
        cut.putValue(Action.NAME, "Cortar");
        cut.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke("control X"));
        menu.add(cut);

        Action copy = new DefaultEditorKit.CopyAction();
        copy.putValue(Action.NAME, "Copiar");
        copy.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke("control C"));
        menu.add(copy);

        Action paste = new DefaultEditorKit.PasteAction();
        paste.putValue(Action.NAME, "Pegar");
        paste.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke("control V"));
        menu.add(paste);

        //  Action select = new SelectAll();
//        menu.add( select);
        txt.setComponentPopupMenu(menu);
    }

    // DateFormat date1 = new SimpleDateFormat("yyyy-M-dd"); 
    // DateFormat date2 = new SimpleDateFormat("yyyy-M-dd"); 
 
    


//  date1.format(dcontg);
}
